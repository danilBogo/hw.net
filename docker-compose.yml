services:
  frontend:
    build:
      context: client/chat
      dockerfile: Dockerfile
    ports:
      - '8080:80'
    depends_on:
      - backend

  backend:
    restart: always
    build:
      context: server/SupportChat
      dockerfile: SupportChat.WebHost/Dockerfile
    ports:
      - '8081:80'
    depends_on:
      - database
      - mongo
      - minio

  database:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: "SupportChatDatabase"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
  
  rabbit-mq:
    image: rabbitmq:3.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
  
  listener:
    restart: always
    build:
      context: server/SupportChat
      dockerfile: SupportChat.RabbitMQListener/Dockerfile
    ports:
      - '8083:80'
    depends_on:
      - backend
      - mongo
      - minio
      - redis

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
      
  minio:
    image: minio/minio
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
      
  redis:
    image: bitnami/redis
    ports:
      - '6379:6379'
    environment:
      REDIS_REPLICATION_MODE: 'master'
      ALLOW_EMPTY_PASSWORD: 'yes'

  mvc:
    container_name: mvc
    restart: always
    build:
      context: server/TimMovie
      dockerfile: Dockerfile
    ports:
      - '8084:80'